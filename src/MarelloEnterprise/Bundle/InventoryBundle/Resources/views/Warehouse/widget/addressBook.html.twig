{% set addressListUrl = path('marelloenterprise_inventory_api_get_warehouse_address', {'warehouse': entity.id}) %}
{% set addressCreateUrl = path('marelloenterprise_inventory_warehouse_create', {'id': entity.id}) %}
{% set addressUpdateRoute = 'marelloenterprise_inventory_warehouse_update' %}
{% set addressDeleteRoute = 'marelloenterprise_inventory_warehouse_update' %}
{% set ownerParam = 'id' %}

{# Address book widget to use on view entity pages #}
<div class="widget-content">
    {# JS template for address view #}
    {% include "OroAddressBundle:Js:address.js.twig" %}

    {# widget container and actions #}
    <div class="list-box map-box" id="address-book"></div>

    <script type="text/javascript">
        require(['jquery', 'underscore', 'routing', 'oroaddress/js/address-book', 'oroui/js/widget-manager'],
                function($, _, routing, AddressBook, widgetManager) {
                    widgetManager.getWidgetInstance({{ app.request.get('_wid')|json_encode|raw }}, function(widget){
                        /** @type oroaddress.AddressBook */
                        var addressBook = new AddressBook({
                            el: '#address-book',
                            addressListUrl: {{ addressListUrl|json_encode|raw }},
                            addressCreateUrl: {{ addressCreateUrl|json_encode|raw }},
                            addressUpdateUrl: function() {
                                var address = arguments[0];
                                return routing.generate(
                                        '{{ addressUpdateRoute }}',
                                        {
                                            '{{ ownerParam }}': {{ entity.id|json_encode|raw }},
                                            'id': address.get('id')
                                        }
                                )
                            },
                            addressDeleteUrl: function() {
                                var address = arguments[0];
                                return routing.generate(
                                        '{{ addressDeleteRoute }}',
                                        {
                                            '{{ ownerParam }}': {{ entity.id|json_encode|raw }},
                                            'addressId': address.get('id')
                                        }
                                )
                            }
                        });
                        widget.getAction('add_address', 'adopted', function(action) {
                            action.on('click', _.bind(addressBook.createAddress, addressBook));
                        });
                        addressBook
                                .getCollection()
                                .reset({{ render(addressListUrl) }});
                    });
                });
    </script>
</div>

