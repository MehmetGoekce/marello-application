parameters:
    #entities
    marello_magebridge.entity.website.class: Marello\Bundle\MageBridgeBundle\Entity\Website
    marello_magebridge.entity.store.class: Marello\Bundle\MageBridgeBundle\Entity\Store
    marello_magebridge.entity.product.class: Marello\Bundle\MageBridgeBundle\Entity\Product

    marello_magebridge.importexport.product_reader.class: Marello\Bundle\MageBridgeBundle\Provider\Reader\ProductReader
    marello_magebridge.importexport.product_converter.class: Marello\Bundle\MageBridgeBundle\ImportExport\Converter\ProductDataConverter
    marello_magebridge.importexport.data_converter.website.class: Marello\Bundle\MageBridgeBundle\ImportExport\Converter\WebsiteDataConverter
    marello_magebridge.importexport.data_converter.store.class: Marello\Bundle\MageBridgeBundle\ImportExport\Converter\StoreDataConverter
    marello_magebridge.importexport.product_export_processor.class: Marello\Bundle\MageBridgeBundle\ImportExport\Processor\ProductExportProcessor
    marello_magebridge.importexport.writer.abstract_export_writer.class: Marello\Bundle\MageBridgeBundle\ImportExport\Writer\AbstractExportWriter
    marello_magebridge.importexport.product_export_writer.class: Marello\Bundle\MageBridgeBundle\ImportExport\Writer\ProductExportWriter
    marello_magebridge.importexport.serializer.product_normalizer.class: Marello\Bundle\MageBridgeBundle\ImportExport\Serializer\ProductNormalizer
    marello_magebridge.mage.abstract.class: Marello\Bundle\MageBridgeBundle\Provider\Connector\AbstractMagentoConnector


services:
    #Export readers
    marello_magebridge.importexport.product_reader:
        class: '%marello_magebridge.importexport.product_reader.class%'
        public: false
        parent: 'oro_importexport.reader.entity'
        calls:
            - [setSourceEntityName, ['%oro_integration.entity.class%']]
            - [setLogger, ['@oro_integration.logger.strategy']]

    #Export converters
    marello_magebridge.importexport.product_converter:
        class: '%marello_magebridge.importexport.product_converter.class%'
        public: false
        arguments:
            - '@doctrine.orm.entity_manager'


    #Import converters
    marello_magebridge.importexport.data_converter.store:
        class: '%marello_magebridge.importexport.data_converter.store.class%'
        public: false
        arguments:
            - '@doctrine.orm.entity_manager'

    marello_magebridge.importexport.data_converter.website:
        class: '%marello_magebridge.importexport.data_converter.website.class%'
        public: false
        arguments:
            - '@doctrine.orm.entity_manager'


    #Export Normalizer
    marello_magebridge.importexport.serializer.product_normalizer:
        class: '%marello_magebridge.importexport.serializer.product_normalizer.class%'
        parent: oro_importexport.serializer.configurable_entity_normalizer
        calls:
            - [setEntityClass, ['%marello_product.entity.class%']]
        tags:
            - { name: oro_importexport.normalizer }



    # Export processors
    marello_magebridge.importexport.product_export_processor:
        parent: oro_integration.importexport.processor.export
        public: false
        calls:
             - [setDataConverter, ["@marello_magebridge.importexport.product_converter"]]
        tags:
            - name: oro_importexport.processor
              type: export
              entity: '%oro_integration.entity.class%'
              alias: marello_magebridge_importexport_product_processor


    #Import processors
    marello_magebridge.importexport.website_import_processor:
        parent: oro_integration.importexport.processor.import
        calls:
            - [setDataConverter, ["@marello_magebridge.importexport.data_converter.website"]]
#            - [setStrategy, ["@marello_magebridge.import.strategy.website"]]
            - [setEntityName, ['%marello_magebridge.entity.website.class%']]
        tags:
            - name: oro_importexport.processor
              type: import
              entity: '%marello_magebridge.entity.website.class%'
              alias: marello_magento_import.website_import_processor

    marello_magebridge.importexport.store_import_processor:
        parent: oro_integration.importexport.processor.import
        calls:
            - [setDataConverter, ["@marello_magebridge.importexport.data_converter.store"]]
#            - [setStrategy, ["@marello_magebridge.import.strategy.store"]]
            - [setEntityName, ['%marello_magebridge.entity.store.class%']]



    # Export writers
    marello_magebridge.importexport.writer.abstract_export:
        class: '%marello_magebridge.importexport.writer.abstract_export_writer.class%'
        parent: oro_integration.writer.persistent_batch_writer
        abstract: true
        calls:
            - [setMagentoResourceOwner, ["@hwi_oauth.resource_owner.magento"]]

    marello_magebridge.importexport.product_export_writer:
        class: '%marello_magebridge.importexport.product_export_writer.class%'
        parent: marello_magebridge.importexport.writer.abstract_export


    #Import writers
    marello_magebridge.writer.proxy_entity_writer:
#        class: '%marello_magebridge.writer.proxy_entity_writer.class%'
        parent: oro_integration.writer.persistent_batch_writer

    # Connectors
    marello_magebridge.connector.abstract:
        class: '%marello_magebridge.mage.abstract.class%'
        abstract: true
        arguments:
            - "@oro_importexport.context_registry"
            - "@oro_integration.logger.strategy"
            - "@oro_integration.provider.connector_context_mediator"
            - []
#        calls:
#            - [setManagerRegistry, ["@doctrine"]]

    marello_magebridge.magento.website:
        class: Marello\Bundle\MageBridgeBundle\Provider\Connector\WebsiteConnector
        parent: marello_magebridge.connector.abstract
        calls:
            - [setClassName, ['%marello_magebridge.entity.website.class%']]
        tags:
            - { name: oro_integration.connector, type: website, channel_type: magento }
            - { name: marello_magebridge.bundle_config.aware, argument_number: 3 }

    marello_magebridge.magento.store:
        class: Marello\Bundle\MageBridgeBundle\Provider\Connector\StoreConnector
        parent: 'marello_magebridge.connector.abstract'
        calls:
            - [setClassName, ['%marello_magebridge.entity.store.class%']]
        tags:
            - { name: oro_integration.connector, type: store, channel_type: magento }
            - { name: marello_magebridge.bundle_config.aware, argument_number: 3 }
